openapi: 3.0.1
info:
  title: STD21071
  description: >-
   My first API
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore.swagger.io/v2
  - url: http://petstore.swagger.io/v2

  
tags:
  - name: Students

  - name: Courses

  - name: Groups
 
paths:
  /students:
    post:
      tags:
      - Students
      summary: Adds a new student
      operationId: addStudent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewStudent'
        400:
          description: Bad request
          content: {}
    get:
      tags:
        - Students
      summary: Get a list of students
      operationId: getStudents
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: page_size
          in: query
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
          content: {}
  /students/{id}:
    get:
      tags:
        - Students
      summary: Get the specified student
      operationId: getStudent
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Bad Request
          content: {}
    delete:
      tags:
        - Students
      summary: Delete the specified student
      operationId: deleteStudent
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
      
        400:
          description: "400_BAD_REQUEST"
          content: {}
    put:
      tags: 
        - Students
      parameters: 
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        description: everything about student except id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudent'
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: "400_BAD_REQUEST"
          content:
            {}
    patch:
      tags:
        - Students
      description: |
        performs update on one of or combination of: 
        * name
        * group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: partial info about the student
        content: {}
        
      responses:
        200:
          description: "success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        
  /courses:
    get:
      tags:
        - Courses
      summary: Get a list of courses
      operationId: getCourses
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int64
          required: true    
        - name: page_size
          in: query
          schema:
            type: integer
            format: int32
          required: true
      responses:
        200:
          description: List Course
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400_BAD_REQUEST"
                  message:
                    type: string
                    example: "Parameter missing"
    post:
      tags:
        - Courses
      summary: Create new courses
      requestBody:
        description: Course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCourse'
      responses:
        200:
          description: course
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
  /courses/{id}:
    get:
      tags:
        - Courses
      summary: Get course number id
      operationId: getCourseID
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true  
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        400:
          description: "400 BAD REQUEST"
          content: {}

  /groups:
    get:
      tags:
        - Groups
  
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int64
          required: true    
        - name: page_size
          in: query
          schema:
            type: integer
            format: int32
          required: true
      responses:
        200:
          description: List Course
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Groups'
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400_BAD_REQUEST"
                  message:
                    type: string
                    example: "Parameter missing"
  /groups/{id}:
    get:
      tags:
        - Groups
      summary: Get id of group 
      operationId: getGroup
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
          content: {}
  
      
components:
  schemas:
    Student:
      type: array
      properties:
        name:
          type: string
        group:
          type: string
      
    NewStudent:
      type: object
      properties:
        name:
          type: string
        group:
          type: string
        id:
          type: string


    Course:
      allOf:
        - $ref: '#/components/schemas/NewCourse'
      type: object
      properties:
        id:
          type: string
    NewCourse:
      type: object
      properties:
        name:
          type: string
        teacher:
          type: string
        createdDatetime:
          type: string
          format: date
          example: "2004-10-05"
    Groups:  
      type: object
      properties:
        name:
          type: string
        id:
          type: string
        group_id:
         type: string
        

 
      

       
    
   